#! /usr/bin/env python3

"""
usage: py3-mkvenv [-h] [-v DIR] [PROJECT_DIR]

Creates a Python virtual environment directory in a new or existing project
using `python -m venv`. After the environment is created, this tool will update
`pip`, `setuptools` and `wheel`. Finally, it will detect a `requirements.txt`
file and `pip install -r` it.

This tool will also create a `.gitignore` file if none is present.

positional arguments:
  PROJECT_DIR   Project directory, specifying this will create a new project
                directory and environment within it [default: .]

options:
  -h, --help    Show this help message and exit
  -v DIR, --venv-dir DIR
                Directory under the project to create the virtual
                environment [default: .venv]
  --version     Show version info and exit

v1.0  Dino Morelli <dino@ui3.info>

"""


from docopt import docopt
import os
import subprocess


def prepDirectory(projectDir):
  if not os.path.exists(projectDir):
    os.makedirs(projectDir)

  # It's VERY IMPORTANT this chdir command executes. Without it, many files
  # will be created in subsequent function calls in the wrong place.
  os.chdir(projectDir)


def mkVirtEnv(venvDir):
  subprocess.call(['python3', '-m', 'venv', venvDir])
  subprocess.call([f'{venvDir}/bin/python', '-m', 'pip', 'install',
    '--upgrade', 'pip', 'setuptools', 'wheel'])


def mkGitignore(venvDir):
  gitIgnoreFile = f'.gitignore'

  if os.path.exists(gitIgnoreFile):
    print(f'{gitIgnoreFile} already exists, not creating')
  else:
    with open(gitIgnoreFile, 'w') as f:
      f.write(f'{venvDir}\n')
    print(f'{gitIgnoreFile} created')


def printSuccessMsg(projectDir, venvDir):
  if projectDir == '.': cdLine = ''
  else: cdLine = f'$ cd {projectDir}\n'

  print(
    f'\nVirtual environment is ready for project in {projectDir}\n\n'

     'Useful commands:\n\n'

    + cdLine +
     '$ git init  # and then more git commands\n'
    f'$ . ./{venvDir}/bin/activate\n'
     '$ pip install SOME_PYTHON_PACKAGE\n'
     '$ pip freeze > requirements.txt  # Not a bad idea to put requirements.txt in source control\n'
     '$ deactivate\n'
    )


def main():
  args = docopt(__doc__, version='py3-mkvenv 1.0')
  # docopt can't set default values for positional arguments (yet), fix that up here
  if args['PROJECT_DIR'] is None: args['PROJECT_DIR'] = '.'

  prepDirectory(args['PROJECT_DIR'])
  mkVirtEnv(args['--venv-dir'])
  mkGitignore(args['--venv-dir'])
  printSuccessMsg(args['PROJECT_DIR'], args['--venv-dir'])


if __name__ == '__main__': main()
